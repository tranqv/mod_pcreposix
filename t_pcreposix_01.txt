1 ########################################################################
1 Start of string or line:
 pattern = ^foam
 string  = foam

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   4) = foam
========================================================================

 pattern = ^foam
 string  = bath foam

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

2 ########################################################################
2 Start of string, any match mode:
 pattern = \Afoam
 string  = foam

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   4) = foam
========================================================================

 pattern = \Afoam
 string  = bath foam

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

3 ########################################################################
3 End of string or line:
 pattern = finish$
 string  = finish

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   6) = finish
========================================================================

 pattern = finish$
 string  = finnish

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

4 ########################################################################
4 End of string, any match mode:
 pattern = finish\Z
 string  = finish

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   6) = finish
========================================================================

 pattern = finish\Z
 string  = finnish

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

5 ########################################################################
5 Word boundary:
 pattern = \bis\b
 string  = This island is beautiful

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (  13:  14) = is
========================================================================

 pattern = \bis\b
 string  = This island isn't beautiful

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

6 ########################################################################
6 Not word boundary:
 pattern = \Bland
 string  = island

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   3:   6) = land
========================================================================

 pattern = \Bland
 string  = peninsula

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

7 ########################################################################
7 Positive lookahead:
 pattern = question(?=s)
 string  = questions

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   8) = question
========================================================================

 pattern = question(?=s)
 string  = question

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

8 ########################################################################
8 Negative lookahead:
 pattern = answer(?!s)
 string  = answer

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   6) = answer
========================================================================

 pattern = answer(?!s)
 string  = answers

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

9 ########################################################################
9 Positive look-behind:
 pattern = (?<=appl)e
 string  = apple

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   5:   5) = e
========================================================================

 pattern = (?<=appl)e
 string  = orange

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

10 ########################################################################
10 Negative look-behind:
 pattern = (?<!goo)d
 string  = mood

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   4:   4) = d
========================================================================

 pattern = (?<!goo)d
 string  = good

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

11 ########################################################################
11 Character class definition:
 pattern = [axf]
 string  = a, x, f

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   1) = a
Result    2: SubSTR (   4:   4) = x
Result    3: SubSTR (   7:   7) = f
========================================================================

 pattern = [axf]
 string  = b

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

12 ########################################################################
12 Character class range:
 pattern = [a-c]
 string  = a, b, c

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   1) = a
Result    2: SubSTR (   4:   4) = b
Result    3: SubSTR (   7:   7) = c
========================================================================

 pattern = [a-c]
 string  = d

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

13 ########################################################################
13 Escape in character class:
 pattern = [a-f\.]
 string  = a, b, .

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   1) = a
Result    2: SubSTR (   4:   4) = b
Result    3: SubSTR (   7:   7) = .
========================================================================

 pattern = [a-f\.]
 string  = g

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

14 ########################################################################
14 Not in class:
 pattern = [^abc]
 string  = de

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   1) = d
Result    2: SubSTR (   2:   2) = e
========================================================================

 pattern = [^abc]
 string  = a

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

15 ########################################################################
15 Any character except newline:
 pattern = b.ttle
 string  = battle, bottle

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   6) = battle
Result    2: SubSTR (   9:  14) = bottle
========================================================================

 pattern = b.ttle
 string  = bttle

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

16 ########################################################################
16 Whitespace:
 pattern = good\smorning
 string  = good morning

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:  12) = good morning
========================================================================

 pattern = good\smorning
 string  = good.morning

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

17 ########################################################################
17 Not whitespace:
 pattern = good\Smorning
 string  = good.morning

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:  12) = good.morning
========================================================================

 pattern = good\Smorning
 string  = good morning

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

18 ########################################################################
18 Digit:
 pattern = \d+
 string  = 0101

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   4) = 0101
========================================================================

 pattern = \d+
 string  = string

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

19 ########################################################################
19 Not a digit:
 pattern = \D+
 string  = string

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   6) = string
========================================================================

 pattern = \D+
 string  = 0101

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

20 ########################################################################
20 Word character:
 pattern = \w+
 string  = string01

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   8) = string01
========================================================================

 pattern = \w+
 string  = .0%

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   2:   2) = 0
========================================================================

21 ########################################################################
21 Not a word character:
 pattern = \W+
 string  = .0%

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   1) = .
Result    2: SubSTR (   3:   3) = %
========================================================================

 pattern = \W+
 string  = string01

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

22 ########################################################################
22 Alternation:
 pattern = apple|orange
 string  = orange, apple

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   6) = orange
Result    2: SubSTR (   9:  13) = apple
========================================================================

 pattern = apple|orange
 string  = melon

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

23 ########################################################################
23 Subpattern:
 pattern = foot(er|ball)
 string  = footer, football

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   6) = footer
Result    2: SubSTR (   9:  16) = football
========================================================================

 pattern = foot(er|ball)
 string  = footpath

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

24 ########################################################################
24 Non-capturing subpattern:
 pattern = foot(?:er|ball)
 string  = footer, football

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   6) = footer
Result    2: SubSTR (   9:  16) = football
========================================================================

 pattern = foot(?:er|ball)
 string  = footpath

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

25 ########################################################################
25 One or more:
 pattern = ye+ah
 string  = yeah, yeeeeeah

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   4) = yeah
Result    2: SubSTR (   7:  14) = yeeeeeah
========================================================================

 pattern = ye+ah
 string  = yah

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

26 ########################################################################
26 Zero or more:
 pattern = ye*ah
 string  = yeah, yeeeeeah, yah

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   4) = yeah
Result    2: SubSTR (   7:  14) = yeeeeeah
Result    3: SubSTR (  17:  19) = yah
========================================================================

 pattern = ye*ah
 string  = yeh

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

27 ########################################################################
27 Zero or one:
 pattern = yes?
 string  = yes, ye

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   3) = yes
Result    2: SubSTR (   6:   7) = ye
========================================================================

 pattern = yes?$
 string  = yesss

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

28 ########################################################################
28 n times exactly:
 pattern = fo{2}
 string  = foo

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   3) = foo
========================================================================

 pattern = fo{2}
 string  = fo

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

29 ########################################################################
29 Between n and m times:
 pattern = go{2,3}d
 string  = good, goood

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   4) = good
Result    2: SubSTR (   7:  11) = goood
========================================================================

 pattern = go{2,3}d
 string  = gooood

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

30 ########################################################################
30 At least n times:
 pattern = go{2,}
 string  = goo, gooo

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   3) = goo
Result    2: SubSTR (   6:   9) = gooo
========================================================================

 pattern = go{2,}
 string  = go

 regfree() done.
------------------------------------------------------------------------
 Result: NOT FOUND.
========================================================================

31 ########################################################################
31 ???:
 pattern = ^a[[:alnum:]]
 string  = abc

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   2) = ab
========================================================================

 pattern = ^a[[:alnum:]]
 string  = axy

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   2) = ax
========================================================================

32 ########################################################################
32 Floating point:
 pattern = [-+]?[0-9]*\.?[0-9]*
 string  = -.23456.345.6789-.012

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   7) = -.23456
Result    2: SubSTR (   8:  11) = .345
Result    3: SubSTR (  12:  16) = .6789
Result    4: SubSTR (  17:  21) = -.012
========================================================================

33 ########################################################################
33 Floating point:
 pattern = [A-z]=[-+]?[0-9]*\.?[0-9]*
 string  = x=-0.1y=+1.2345z=.12,3.4

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   6) = x=-0.1
Result    2: SubSTR (   7:  15) = y=+1.2345
Result    3: SubSTR (  16:  20) = z=.12
========================================================================

34 ########################################################################
34 Floating point:
 pattern = [A-z]=[-+]?[0-9]*\.?[0-9]*&
 string  = x=-0.1&y=+1.2345&z=.12

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:   7) = x=-0.1&
Result    2: SubSTR (   8:  17) = y=+1.2345&
========================================================================

35 ########################################################################
35 Floating point:
 pattern = \b[A-z]=[-+]?[0-9]*\.?[0-9]*\b
 string  = what+is+this&x=-0.1&y=+1.2345&z=.12

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (  14:  19) = x=-0.1
Result    2: SubSTR (  21:  29) = y=+1.2345
Result    3: SubSTR (  31:  35) = z=.12
========================================================================

36 ########################################################################
36 Floating point:
 pattern = [-+]?([0-9]*\.[0-9]+|[0-9]+)
 string  = what+is+this&x=-0.1&y=+1.2345e0&z=.12

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (  16:  19) = -0.1
Result    2: SubSTR (  23:  29) = +1.2345
Result    3: SubSTR (  31:  31) = 0
Result    4: SubSTR (  35:  37) = .12
========================================================================

37 ########################################################################
37 Floating point:
 pattern = [-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?
 string  = what+?&x=-0.1e-2&y=+1.2345e0&z=.12

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (  10:  16) = -0.1e-2
Result    2: SubSTR (  20:  28) = +1.2345e0
Result    3: SubSTR (  32:  34) = .12
========================================================================

38 ########################################################################
38 Floating point:
 pattern = [-+]?[0-9]*\.?[0-9]
 string  = what+?&x=-0.1e-2&y=+1.2345e0&z=.12

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (  10:  13) = -0.1
Result    2: SubSTR (  15:  16) = -2
Result    3: SubSTR (  20:  23) = +1.2
Result    4: SubSTR (  24:  26) = 345
Result    5: SubSTR (  28:  28) = 0
Result    6: SubSTR (  32:  33) = .1
Result    7: SubSTR (  34:  34) = 2
========================================================================

39 ########################################################################
39 Email:
 pattern = \b[A-z0-9._%+-]+@[A-z0-9.-]+\.[A-z]{2,}\b
 string  = viet204@gmail.com x@a.b.c

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:  17) = viet204@gmail.com
========================================================================

40 ########################################################################
40 Email:
 pattern = \b[A-z0-9._%+-]+@[A-z0-9.-]+\.[A-z]{2,}\b
 string  = viet204@gmail.com x@ak.op.vn

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:  17) = viet204@gmail.com
Result    2: SubSTR (  19:  28) = x@ak.op.vn
========================================================================

41 ########################################################################
41 Email:
 pattern = \b[A-z0-9._%+-]+@[A-z0-9.-]+\.[A-z]{2,}\b
 string  = viet204@gmail.com,x@ak.op.vn

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:  17) = viet204@gmail.com
Result    2: SubSTR (  19:  28) = x@ak.op.vn
========================================================================

42 ########################################################################
42 Email:
 pattern = \b[A-z0-9._%+-]+@[A-z0-9.-]+\.[A-z]{2,}\b
 string  = viet204@gmail.com; x@ak.op.vn

 regfree() done.
------------------------------------------------------------------------
Result    1: SubSTR (   1:  17) = viet204@gmail.com
Result    2: SubSTR (  20:  29) = x@ak.op.vn
========================================================================

43 ########################################################################
